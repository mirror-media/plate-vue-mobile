workspace:
  base: /mirror-media
  path: plate-vue-mobile
pipeline:
  # Start build node builder for plate-vue-mobile
  # --------------------------------- Build node-builder image: Push to builder branch ---------------------------
  builder-start:
    image: plugins/slack
    channel: jenkins
    secrets: [slack_webhook]
    username: drone
    icon_url: https://avatars2.githubusercontent.com/u/2181346?s=200&v=4
    template: >
      {{build.author}} {{build.event}} ${DRONE_COMMIT_SHA:0:7} to *{{repo.name}}:{{build.branch}}*.
      Start to build <${DRONE_BUILD_LINK}|node-builder>
    when:
      event: push
      branch: builder

  publish:
    image: plugins/gcr
    repo: mirrormedia-1470651750304/${DRONE_REPO_NAME}
    tag:
    - node-10.15.3-builder
    build_args: NODE_BASE=10.15.3-alpine
    dockerfile: docker/Dockerfile.builder
    environment:
      - DOCKER_LAUNCH_DEBUG=true
    secrets: [google_credentials]
    when:
      event: push
      branch: builder

  builder-finish:
    image: plugins/slack
    channel: jenkins
    secrets: [slack_webhook]
    username: drone
    icon_url: https://avatars2.githubusercontent.com/u/2181346?s=200&v=4
    when:
      event: push
      branch: builder
    template: >
      {{#success build.status}}
        plate-vue-mobile:node-10.15.3-builder was successfully built.
      {{else}}
        Houston, we have a problem. <${DRONE_BUILD_LINK}|node-builder> failed.
      {{/success}}
  # -------------------------------------------- Release to Dev pipeline: Push to master  -----------------------------------------------
  push-start:
    image: plugins/slack
    channel: jenkins
    secrets: [slack_webhook]
    username: drone
    icon_url: https://avatars2.githubusercontent.com/u/2181346?s=200&v=4
    template: >
      {{build.author}} {{build.event}} ${DRONE_COMMIT_SHA:0:7} to *{{repo.name}}:{{build.branch}}*.
      Build <${DRONE_BUILD_LINK}|#{{build.number}}> start.
    when:
      event: push
      branch: master

  restore-cache:
    image: drillster/drone-volume-cache
    restore: true
    mount:
      - ./node_modules
    volumes:
      - /tmp/cache:/cache
    when:
      event: push
      branch: master

  get-config:
    image: gcr.io/mirrormedia-1470651750304/drone-cloud-sdk:latest
    secrets: [google_credentials]
    commands:
      - gcloud source repos clone configs configs
      - cp configs/mirror-media/plate-vue/dev/config.js ./api/config.js
      - cp configs/gcskeyfile.json ./gcskeyfile.json
      - rm -rf configs
    when:
      event: push
      branch: master

  builds:
    # image: gcr.io/mirrormedia-1470651750304/plate-vue-mobile:node-10.15.3-builder
    image: node:10-alpine
    commands:
      - npm install
      - npm run build
    when:
      event: push
      branch: master

  publish:
    image: plugins/gcr
    repo: mirrormedia-1470651750304/${DRONE_REPO_NAME}
    tag:
    - ${DRONE_BRANCH}-${DRONE_COMMIT_SHA:0:7}
    environment:
      - DOCKER_LAUNCH_DEBUG=true
    secrets: [google_credentials]
    dockerfile: docker/Dockerfile.stage
    when:
      event: push
      branch: master

  rebuild-cache:
    image: drillster/drone-volume-cache
    rebuild: true
    mount:
      - ./node_modules
    volumes:
      - /tmp/cache:/cache
    when:
      event: push
      branch: master

  download-charts:
    image: gcr.io/mirrormedia-1470651750304/drone-cloud-sdk:latest
    secrets: [google_credentials]
    commands:
      - gcloud source repos clone helm
      - gcloud source repos clone configs
      - cp configs/mirror-media/plate-vue/dev/config.js ./helm/plate-vue/config.js
      - cp configs/mirror-media/plate-vue-mobile/dev/values.yaml ./helm/plate-vue/values.yaml
    when:
      event: push
      branch: master

  helm-deploy-dev:
    image: quay.io/ipedrazas/drone-helm
    skip_tls_verify: true
    chart: ./helm/plate-vue
    release: "plate-vue-mobile"
    wait: true
    upgrade: true
    reuse_values: false
    recreate_pods: true
    client_only: true
    service_account: tiller
    secrets: [api_server, kubernetes_token]
    values: image.tag=${DRONE_BRANCH}-${DRONE_COMMIT_SHA:0:7}
    when:
      event: push
      branch: master

  push-finish:
    image: plugins/slack
    channel: jenkins
    secrets: [slack_webhook]
    username: drone
    icon_url: https://avatars2.githubusercontent.com/u/2181346?s=200&v=4
    when:
      status: [success, failure]
      event: push
      branch: master
    template: >
      {{#success build.status}}
        *{{repo.name}}:${DRONE_BRANCH}-${DRONE_COMMIT_SHA:0:7}* by *{{build.author}}* in branch *{{build.branch}}* was locked and loaded.
      {{else}}
        Houston, we have a problem. plate-vue-mobile <${DRONE_BUILD_LINK}|build> failed.
      {{/success}}
  # ---------------------------------------------------- Upload prod image: Tag commits --------------------------------------------
  release-start:
    image: plugins/slack
    channel: jenkins
    secrets: [slack_webhook]
    username: drone
    icon_url: https://avatars2.githubusercontent.com/u/2181346?s=200&v=4
    template: >
      Releasing plate-vue-mobile:${DRONE_TAG}
    when:
      event: tag

  get-configs:
    image: gcr.io/mirrormedia-1470651750304/drone-cloud-sdk:latest
    secrets: [google_credentials]
    commands:
      - gcloud source repos clone configs ../configs
    when:
      event: tag

  configure:
    image: busybox:latest
    commands:
      - cp ../configs/mirror-media/plate-vue/prod/config.js ./api/config.js
    when:
      event: tag

  publish:
    image: plugins/gcr
    repo: mirrormedia-1470651750304/${DRONE_REPO_NAME}
    tag:
      - release-${DRONE_COMMIT_SHA:0:7}
      - ${DRONE_TAG}
    environment:
      - DOCKER_LAUNCH_DEBUG=true
    secrets: [google_credentials]
    dockerfile: docker/Dockerfile.production
    build_args: STAGE_VERSION=master-${DRONE_COMMIT_SHA:0:7}
    when:
      event: tag

  release-finish:
    image: plugins/slack
    channel: jenkins
    secrets: [slack_webhook]
    username: drone
    icon_url: https://avatars2.githubusercontent.com/u/2181346?s=200&v=4
    when:
      status: [success, failure]
      event: tag
    template: >
      {{#success build.status}}
        *${DRONE_TAG}* was uploaded for *{{repo.name}} ${DRONE_COMMIT_SHA:0:7}*.
        Lets light this candle!.
      {{else}}
        Houston, we have a problem. <${DRONE_BUILD_LINK}| Release ${DRONE_TAG}> failed.
      {{/success}}
